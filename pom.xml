<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!--
      POM generated by gwt-maven-plugin archetype
    -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.aksw.myapp.gwt</groupId>
    <artifactId>myapp</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>

    <properties>
        <java.ttt>test</java.ttt>
        <!-- convenience to define GWT version in one place -->
        <gwt.version>2.0.4</gwt.version>
        <!--  tell the compiler we can use 1.6 -->
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
            this is shown in the gwt hosted mode
            and passed to the browser when launch default browser is pressed
        -->
        <this.runTarget>org.aksw.myapp.gwt.Application/Application.html</this.runTarget>
        <this.usePermutations>false</this.usePermutations>
    </properties>
    <repositories>
        <repository>
            <id>maven.aksw.internal/</id>
            <name>University Leipzig, AKSW Maven2 Repository</name>
            <url>http://prod1.aksw.org:8081/archiva/repository/internal</url>
        </repository>
        <repository>
            <id>maven.aksw.snapshots/</id>
            <name>University Leipzig, AKSW Maven2 Repository</name>
            <url>http://prod1.aksw.org:8081/archiva/repository/snapshots</url>
        </repository>
    </repositories>
    <dependencies>
        <!--  GWT dependencies (from central repo) -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6.SEC01</version>
        </dependency>

        <!--spring
                <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils-core</artifactId>
                    <version>1.8.2</version>
                </dependency>
                <dependency>
                    <groupId>commons-util.collections.scala</groupId>
                    <artifactId>commons-util.collections.scala</artifactId>
                    <version>20040616</version>
                </dependency>


                <dependency>
                    <groupId>org.ini4j</groupId>
                    <artifactId>ini4j</artifactId>
                    <version>0.5.1</version>
                </dependency>
        -->
    </dependencies>

    <build>
        <outputDirectory>war/WEB-INF/classes</outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>generateAsync</goal>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <runTarget>${this.runTarget}</runTarget>
                    <debugPort>8001</debugPort>
                    <logLevel>DEBUG</logLevel>
                </configuration>
            </plugin>
            <!--
                   If you want to use the target/web.xml file mergewebxml produces,
                   tell the war plugin to use it. Also, exclude what you want from the
                   final artifact here.
               -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- <webXml>src/main/webapp/WEB-INF/web.xml</webXml>-->

                    <!-- warName>org.nlp2rdf.navigator.Application</warName-->
                    <!--<webXml>war/WEB-INF/web.xml</webXml>-->
                    <warSourceExcludes>.gwt-tmp/**</warSourceExcludes>
                    <!-- packagingIncludes>../lib/**/*.jar</packagingIncludes-->
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
                <configuration>
                    <server>local</server>
                    <url>http://localhost:8080/manager</url>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <mkdir dir="./war/WEB-INF"/>
                                <copy overwrite="true" todir="./war/WEB-INF/">
                                    <fileset dir="./src/main/webapp/WEB-INF">
                                        <include name="web.xml"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
